import{_ as e,c as a,o as t,V as o}from"./chunks/framework.sH_TUDjc.js";const u=JSON.parse('{"title":"Binary Deployment","description":"","frontmatter":{"title":"Binary Deployment"},"headers":[],"relativePath":"docs/deploy/binary.md","filePath":"docs/deploy/binary.md"}'),i={name:"docs/deploy/binary.md"},s=o('<h1 id="binary-deployment" tabindex="-1">Binary Deployment <a class="header-anchor" href="#binary-deployment" aria-label="Permalink to &quot;Binary Deployment&quot;">â€‹</a></h1><p>Before run the deployment, ensure your <code>SERVER_HOST</code> on <a href="/docs/config">configs/app.yaml</a> is <code>0.0.0.0</code>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build ./cmd/project-name/project-name.go</span></span></code></pre></div><p>That command will build <code>project-name</code> binary based on your OS and CPU architecture. You can deploy that binary to the server.</p><p>It could be your target deployment OS is different with your development OS. For example, your development machine is MacBook with M1 CPU, and your deployment target is Linux with AMD/Intel CPU. In that case you can add <code>GOOS</code> or <code>GOARCH</code> variable to the build command.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GOOS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">linux GOARCH=amd64 go build ./cmd/project-name/project-name.go</span></span></code></pre></div>',6),n=[s];function d(c,p,r,l,h,y){return t(),a("div",null,n)}const _=e(i,[["render",d]]);export{u as __pageData,_ as default};
