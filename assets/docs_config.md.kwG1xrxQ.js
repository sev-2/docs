import{_ as a,c as e,o as s,V as n}from"./chunks/framework.DvHbsNxb.js";const b=JSON.parse('{"title":"Configuration","description":"","frontmatter":{"title":"Configuration"},"headers":[],"relativePath":"docs/config.md","filePath":"docs/config.md"}'),o={name:"docs/config.md"},t=n(`<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>By default, configuration will be generated at first-time you create Raiden&#39;s project. The configuration is stored on <code>configs/app.yaml</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>PROJECT_NAME: project-name</span></span>
<span class="line"><span>DEPLOYMENT_TARGET: cloud</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ACCESS_TOKEN:</span></span>
<span class="line"><span>ANON_KEY:</span></span>
<span class="line"><span>SERVICE_KEY:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SUPABASE_API_URL: https://api.supabase.com</span></span>
<span class="line"><span>SUPABASE_API_BASE_PATH:</span></span>
<span class="line"><span>SUPABASE_PUBLIC_URL: https://xxxxxxxx.supabase.co/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SERVER_HOST: 127.0.01</span></span>
<span class="line"><span>SERVER_PORT: 8002</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENVIRONMENT: development</span></span>
<span class="line"><span>VERSION: 1.0.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BREAKER_ENABLE: true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>TRACE_ENABLE: false</span></span>
<span class="line"><span>TRACE_COLLECTOR:</span></span>
<span class="line"><span>TRACE_ENDPOINT:</span></span></code></pre></div><h2 id="project-name" tabindex="-1">PROJECT_NAME <a class="header-anchor" href="#project-name" aria-label="Permalink to &quot;PROJECT_NAME&quot;">​</a></h2><p>This is the name of your project.</p><h2 id="deployment-target" tabindex="-1">DEPLOYMENT_TARGET <a class="header-anchor" href="#deployment-target" aria-label="Permalink to &quot;DEPLOYMENT_TARGET&quot;">​</a></h2><p>The deployment target of Raiden. The possibility values id <code>cloud</code> or <code>self-hosted</code>.</p><h2 id="access-token" tabindex="-1">ACCESS_TOKEN <a class="header-anchor" href="#access-token" aria-label="Permalink to &quot;ACCESS_TOKEN&quot;">​</a></h2><p>This only be used if you use <code>cloud</code> as target deployment. The value can be found on <a href="https://supabase.com/dashboard/account/tokens" target="_blank" rel="noreferrer">https://supabase.com/dashboard/account/tokens</a>.</p><h2 id="anon-key" tabindex="-1">ANON_KEY <a class="header-anchor" href="#anon-key" aria-label="Permalink to &quot;ANON_KEY&quot;">​</a></h2><p>The anon key allows users to interact with Supabase as &quot;anonymous&quot; users.</p><p>On cloud, the anon key value can be found on <a href="https://supabase.com/dashboard/projects" target="_blank" rel="noreferrer">Project Settings</a>. On self-hosted, you can generate the anon key value by your own.</p><p>Read <a href="https://supabase.com/docs/guides/api/api-keys#the-anon-key" target="_blank" rel="noreferrer">anon key documentation on Supabase</a></p><h2 id="service-key" tabindex="-1">SERVICE_KEY <a class="header-anchor" href="#service-key" aria-label="Permalink to &quot;SERVICE_KEY&quot;">​</a></h2><p>The service key is designed to perform various administrative and service-related tasks. It can bypass RLS (Row Level Security),</p><p>On cloud, the service key value can be found on <a href="https://supabase.com/dashboard/projects" target="_blank" rel="noreferrer">Project Settings</a>. On self-hosted, you can generate the service key value by your own.</p><p>Read <a href="https://supabase.com/docs/guides/api/api-keys#the-servicerole-key" target="_blank" rel="noreferrer">service key documentation on Supabase</a></p><h2 id="supabase-api-url" tabindex="-1">SUPABASE_API_URL <a class="header-anchor" href="#supabase-api-url" aria-label="Permalink to &quot;SUPABASE_API_URL&quot;">​</a></h2><p>On cloud deployment target, the URL should be <code>https://api.supabase.com</code>.</p><p>On self-hosted deployment target, the URL value is your Supabase api URL.</p><h2 id="supabase-api-base-path" tabindex="-1">SUPABASE_API_BASE_PATH <a class="header-anchor" href="#supabase-api-base-path" aria-label="Permalink to &quot;SUPABASE_API_BASE_PATH&quot;">​</a></h2><p>This will used if your deployment target is self-hosted. By default the value is <code>/api/pg-meta/default</code>.</p><h2 id="supabase-public-url" tabindex="-1">SUPABASE_PUBLIC_URL <a class="header-anchor" href="#supabase-public-url" aria-label="Permalink to &quot;SUPABASE_PUBLIC_URL&quot;">​</a></h2><p>On cloud target deployment the value should be your project URL.</p><p>On self-hosted target deployment the value of public URL can be your Supabase Studio URL.</p><h2 id="server-host" tabindex="-1">SERVER_HOST <a class="header-anchor" href="#server-host" aria-label="Permalink to &quot;SERVER_HOST&quot;">​</a></h2><p>The Raiden default host. Default is <code>127.0.0.1</code>. You can change it to <code>0.0.0.0</code> to make the server be able to accessible from the outside.</p><h2 id="server-port" tabindex="-1">SERVER_PORT <a class="header-anchor" href="#server-port" aria-label="Permalink to &quot;SERVER_PORT&quot;">​</a></h2><p>Default port is <code>8002</code>.</p><h2 id="environment" tabindex="-1">ENVIRONMENT <a class="header-anchor" href="#environment" aria-label="Permalink to &quot;ENVIRONMENT&quot;">​</a></h2><p>The value typically refers to a specific configuration or setup where the project is deployed, tested, or developed. Example value: <code>development</code>, <code>production</code>, or <code>testing</code>.</p><h2 id="version" tabindex="-1">VERSION <a class="header-anchor" href="#version" aria-label="Permalink to &quot;VERSION&quot;">​</a></h2><p>The version of project.</p><h2 id="breaker-enable" tabindex="-1">BREAKER_ENABLE <a class="header-anchor" href="#breaker-enable" aria-label="Permalink to &quot;BREAKER_ENABLE&quot;">​</a></h2><p>Default value is <code>true</code>.</p><h2 id="trace-enable" tabindex="-1">TRACE_ENABLE <a class="header-anchor" href="#trace-enable" aria-label="Permalink to &quot;TRACE_ENABLE&quot;">​</a></h2><p>Default value is <code>false</code>.</p><h2 id="trace-collector" tabindex="-1">TRACE_COLLECTOR <a class="header-anchor" href="#trace-collector" aria-label="Permalink to &quot;TRACE_COLLECTOR&quot;">​</a></h2><h2 id="trace-endpoint" tabindex="-1">TRACE_ENDPOINT <a class="header-anchor" href="#trace-endpoint" aria-label="Permalink to &quot;TRACE_ENDPOINT&quot;">​</a></h2>`,39),r=[t];function p(l,i,c,d,h,u){return s(),e("div",null,r)}const _=a(o,[["render",p]]);export{b as __pageData,_ as default};
