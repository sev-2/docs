import{_ as e,c as s,o as a,V as i}from"./chunks/framework.sH_TUDjc.js";const g=JSON.parse('{"title":"Access Control Lists (ACL)","description":"","frontmatter":{"title":"Access Control Lists (ACL)"},"headers":[],"relativePath":"docs/acl.md","filePath":"docs/acl.md"}'),t={name:"docs/acl.md"},n=i(`<h1 id="access-control-lists-acl" tabindex="-1">Access Control Lists (ACL) <a class="header-anchor" href="#access-control-lists-acl" aria-label="Permalink to &quot;Access Control Lists (ACL)&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>In Supabase, ACL (Access Control Lists) and RLS (Row-Level Security) are essential components for managing access to data and ensuring data security within the platform. ACL and RLS provide powerful tools for controlling access to data at both the database object and row levels. They enable administrators to define fine-grained access control rules, ensuring data security and compliance with privacy requirements. Here&#39;s an overview of how they work:</p><ul><li>Supabase leverages PostgreSQL&#39;s built-in Row-Level Security (RLS) feature to control access to individual rows within a table based on specific criteria.</li><li>ACL refers to the management of access permissions at the database object level, including tables, schemas, functions, etc.</li><li>Model definition in Raiden can be used for managing access control. The ACL allows to grant or revoke permissions to users and roles.</li><li>Enforcement occurs automatically, regardless of how users interact with the database, whether through SQL queries, RPC, application code, or Supabase&#39;s client libraries.</li></ul><h2 id="role-definition" tabindex="-1">Role Definition <a class="header-anchor" href="#role-definition" aria-label="Permalink to &quot;Role Definition&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-N5w2U" id="tab-NxVUyP9" checked="checked"><label for="tab-NxVUyP9">internal/roles/anon.go</label></div><div class="blocks"><div class="language-go vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> roles</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/sev-2/raiden/pkg/postgres</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></div></div><h2 id="acl-definition-on-model" tabindex="-1">ACL Definition on Model <a class="header-anchor" href="#acl-definition-on-model" aria-label="Permalink to &quot;ACL Definition on Model&quot;">​</a></h2><p>You can ACL value on model. Please read <a href="/docs/model">Model</a> to know more about it.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Books</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Acl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`read:&quot;&quot; write:&quot;public&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>There are <code>read</code> and <code>write</code> method of ACL. Insert, update, and delete are included in <code>write</code>.</p><p>The available values:</p><ul><li><code>&quot;public&quot;</code>: data on this model accessible by public.</li><li><code>&quot;authenticated&quot;</code>: only authenticated users are be able to access data on this model.</li><li><code>&quot;&quot;</code>: no one can access.</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Service key can bypass the ACL.</p></div>`,13),o=[n];function l(c,r,d,h,p,u){return a(),s("div",null,o)}const b=e(t,[["render",l]]);export{g as __pageData,b as default};
